{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; // Update import for Routes\nimport './App.css'; // Make sure you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n\n  // Fetch data from the backend when the component mounts\n  useEffect(() => {\n    fetch('http://backend:5000/your-api-endpoint').then(response => response.json()).then(data => setData(data)) // Update state with the fetched data\n    .catch(error => console.log('Error fetching data: ', error));\n  }, []); // Empty array means this runs only once, when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-initial\",\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sign-in-text\",\n            children: \"Sign-In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n// Example of the Home component to display the fetched data\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nfunction Home({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) // Display the data from backend\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Home;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","data","setData","fetch","then","response","json","catch","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Home","_c","JSON","stringify","_c2","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';  // Update import for Routes\nimport './App.css'; // Make sure you have a CSS file for styling\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    // Fetch data from the backend when the component mounts\n    useEffect(() => {\n        fetch('http://backend:5000/your-api-endpoint')\n            .then(response => response.json())\n            .then(data => setData(data))  // Update state with the fetched data\n            .catch(error => console.log('Error fetching data: ', error));\n    }, []);  // Empty array means this runs only once, when the component mounts\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <div className=\"login-container\">\n                        <div className=\"avatar\">\n                            {/* You can replace this with an image or an icon */}\n                            <span className=\"avatar-initial\">T</span>\n                        </div>\n                        <span className=\"sign-in-text\">Sign-In</span>\n                    </div>\n                </header>\n\n                <Routes>\n                    {/* Define your routes here */}\n                    {/* Example route */}\n                    <Route path=\"/\" element={<Home data={data} />} />\n                    {/* You can define more routes as needed */}\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\n// Example of the Home component to display the fetched data\nfunction Home({ data }) {\n    return (\n        <div>\n            <h1>Data from Backend</h1>\n            {data ? (\n                <pre>{JSON.stringify(data, null, 2)}</pre> // Display the data from backend\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}